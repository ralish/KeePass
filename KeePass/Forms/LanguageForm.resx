<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="m_ilLanguages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="m_ilLanguages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        BgAAAk1TRnQBSQFMAwEBAAEEAQABBAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARAiAAESAgEBFwFFAgEBeQFXAgIBswFcAgMBxgFcAgMBxQFWAgIBrwE/AgEBagEP
        AgEBEtwAAUQCAQF3AWwBDAEKAesBgAF/AU0B/gGBAakBYgH/AYYBuwFwAf8BiQG2AXEB/wGzAagBgQH/
        AaIBTgE/Af0BYQIEAd4BOgIBAV/UAAFTAgIBpAG1An8B/gH/Ae8B5QH/Ad0B+AHPAf8B3wH1Ac4B/wHm
        AfUB1gH/AekB+gHfA/8B+gP/AfkB/wHrAcgBuQH/AWsBKwEVAfkBRQIBAXrMAAFNAgIBkAHGAZoBgQL/
        Af0B4wL/AeoBzgL/AeABwgL/AdwBuwL/AdwBuQL/Ad0BvQL/AeABwwL/AeoB0QP/AfYB/wH9AeQB1AH/
        AWsBLAEVAfkBOQIBAV3EAAEnAgEBOAF/AS8BJwH4Ab8B0wGOAv8B2wGyAv8BzwGcAv8BygGTAv8ByAGP
        Av8ByQGOAv8BywGUAv8B0gGfAv8B1gGpAf8B7gHVAasC/wH4AeEB/wHyAcgBrQH/AV8CBAHdAQ8CAQES
        wAABWAICAbIBgQGPAVEB/wGBAaMBWgH/AfgByQGNAv8BwAGBAv8BugGBAv8BuQF/Av8BuwGBAf8B1AGv
        AXAB/wGBAZgBUAH/AeEBvQGBAf8B7QHHAY4B/wGoAbIBfgH/AYEBqQFlAf8BlgFJAT8B/QE/AgEBasAA
        AWcBDAEIAeoBWQGCATcB/wEwAXgBGAH/AYEBiQFDAf8B9QGzAXIC/wGxAW0C/wGuAWkC/wGzAW8B/wGG
        AYoBQQH/ASABcgETAf8BgQGGAT8B/wH9AcUBgwH/AZ0BnAFdAf8BcAGRAUkB/wHGAZwBfQH/AVYCAgGw
        wAABhwEzASYB+QFHAXsBJgH/ATEBZgEVAf8BLgFlARQB/wGxAZEBTAL/AbMBbAL/AbQBbgL/AbgBcQH/
        AXgBgQEzAf8BMwFpARgB/wE4AWoBGAH/AaoBkwFTAf8B5QGwAXYB/wHJAbIBgQH/AewBugGKAf8BXAID
        AcXAAAGQAUcBHwH7AT8BZgEeAf8BMAFSARAB/wF+AXwBMgH/AeMBqQFlAv8BtwF0Af8B2wGjAWMB/wG2
        AY4BUAH/AU8BYQEZAf8BNAFUARAB/wE3AVgBEgH/AVABZgEdAf8BngGDAUkB/wGjAY8BVgH/AbsBlwFs
        Af8BWgIDAcfAAAF8ASQBHQH2AYUBgQE+Af8BtwGKAUoB/wH1Aa4BagL/Ab4BgQH/AdsBrAF6Af8BaAFt
        ATkB/wFVAWQBMQH/AVsBZQEzAf8BUgFbASoB/wFDAU0BFwH/AU0BTgEQAf8CVQEXAf8BVAFaASEB/wGS
        AX4BRwH/AVcCAgG0wAABYgIEAdkBsQGLAVAB/wHtAaoBYwL/AcoBjAL/Ad4BtwH/AeAB0gG5Af8BnwGm
        AY8B/wGgAacBjwH/AagBqwGTAf8BpgGpAZAB/wGVAZkBgQH/AXsBfwFZAf8BNgFGARcB/wE+AU4BGQH/
        AaoBfwFOAf8BRAIBAXfAAAFIAgIBgQGdAYEBSwH/AaUBtQGBAf8B+QHuAdoC/wHwAeEC/wH2AeoB/wHx
        Ae4B4AH/AcIBzwG4Af8BxgHRAboB/wHNAdUBvAH/AcQB0AG3Af8BugHNAbUB/wGFAagBhgH/AoEBRwH/
        AXEBDgEHAewBFAIBARnAAAEPAgEBEgFjAgQB3wG9AccBlQH/AcwB6QHRAf8B5QHpAdgB/wH4AfQB6QL/
        Af0B+AH/AdkB6AHWAf8BvgHYAb4B/wHAAdgBvwH/AcMB2QHBAf8BwAHfAcoB/wG3AdgBqwH/AZ8BfAFF
        Af4BRQIBAXnIAAEmAgEBNwFzARIBDwHvAeAB3QG6Af8B2wH4AecB/wHeAfAB5QH/AewB9QHtAf8B4wHv
        AeMB/wHVAecB1gH/AdUB6gHcAf8B2wH2AekB/wHrAfABzwH/AckBkwFtAf8BUwICAaTQAAEmAgEBNwFl
        AgQB3QHiAbcBngH/AfgB9wHsCf8B+wP/AfoB/gHyAf8B9gHZAb0B/wGRATQBKwH4AU8CAgGU2AABCgIB
        AQwBSAICAYABYgIEAdkBhAEpASMB9QGkAV0BVAH7AZkBSAE9AfkBawEOAQwB6gFYAgIBsgEoAgEBOtAA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHwAQ8GAAHgAQcGAAHAAQMGAAGA
        AQFHAAEBBgABgAEDBgABwAEHBgAB4AEPBgAL
</value>
  </data>
</root>