<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="m_ilTabIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="m_ilTabIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAw
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEEIAAxIBGQFTAlIBqgFUAlMBqwMdASosAAMjATMBZAI+AewBWQJWAb4DEgEZ
        sAADFAEbAWACUgHWARwBgAHfAf8BKAFvAbAB/wFUAlMBqygAAyYBOQFiAkAB6QHyAucB/wHaAtAB/wFZ
        AlQBwgMSARmoAAMSARkBXgJUAdUBFQF2Ae0B/wFJAdsC/wFQAbQB6gH/AVMCUgGqJAADJwE7AWQCRgHn
        AeoC3wH/AewC4gH/AeYC2QH/AdwC1QH/AVsCVwHElAADAwEEAwEBAggAAxABFgFeAlEB2AEWAXcB8QH/
        AUgB1QL/AVkBxwHyAf8BXQJQAdcDFQEdIAADJAE2AWQCPgHsAekC3AH/AfUC7QH/AeEC2AH/AeQC2QH/
        AfwC9wH/AWECOgHujAADNAJUAlMBrwFcAlQB0QFeAlUBzgFSAlEBoQMoATwBVgJUAbYBQAGOAfQB/wFG
        AdQC/wFYAcgB8wH/AV4CVAHVAxQBGyAAAyQBNQFkAj8B7AHrAuQB/wH1Au0B/wHqAuIB/wH7AvgB/wH2
        AvQB/wFkAj8B7AMmATiEAAMMARABVQJUAbIBcAFEAUUB+gGoAaUBoAH/AbYBsAGpAf8BowGfAZgB/wGA
        AXgBdgH/AV8CLQHzAWUBRwFaAfwBywH0AfUB/wFrAccB+AH/AV4CUQHYAxUBHSAAAyQBNgFfAkEB6AHr
        AuYF/wH4AvYB/wH6AvYB/wHyAu8B/wFkAkYB5wMnATuEAAMEAQYBWgJWAcUBtwGzAa8B/wH1AekB2AL/
        AfMB3wL/AfUB4gL/AfQB4AH/AecB3gHLAf8BqAGgAZcB/wGmAaQBmAH/AXQBVQFhAfwBVgJUAbQDDwEU
        GAADGgElAyoBQQM4AVwBZQJGAeUB7gLoDf8B8QLuAf8BYgJAAekDJgE5iAADSAGGAbUBsQGuAv8B8wHb
        Av8B8gHZAv8B8AHYAv8B7wHYAv8B8AHZAv8B9wHgAf8B+gHsAdQB/wGkAZwBkAH/AVICKwH0AyUBNxQA
        AxYBHwFUAlMBqwFkAkYB5wFmAjkB8AFqAkEB+QHgAtYN/wHvAusB/wFkAj8B7AMjATOMAAFgAkwB4AH0
        AeUB0wL/Ae0BzgL/AegBzAL/AeUBxwL/AeUBxwL/AeYByAL/AecBzQL/AfUB2wH/AeAB0AG3Af8BZQFj
        AWAB/wNRAaAQAAMVAR0BWgJTAdMBxwK4Af8B8QLlAf8B+QLxAf8B+wL0Af8B7ALlAf8B7ALlBf8B8gLt
        Af8BZAJAAesDJQE3kAABggJHAfkB/wHoAcsC/wHfAbsC/wHaAbIC/wHWAaoC/wHVAakC/wHXAawC/wHb
        AbQC/wHoAccB/wH9AeUBxQH/AYoCgQH/AVwCVgHPAwMBBAwAA1ABmgG8Aq8B/wHpAtoB/wHpAt0B/wH0
        AuoB/wHzAu4B/wH2AvQB/wHuAucB/wHmAt8B/wFgAkwB4AMnATuUAAF9AW0BawH8Af8B3AG3Av8BzwGe
        Av8BzQGZAv8BzQGZAv8BzQGaAv8BzAGZAv8BzQGaAv8B1wGpAv8B3QG0Af8BlwGHAYEB/wFcAlQB0QMD
        AQQMAAFlAjoB7gHcAskB/wHdAs0B/wG9Aq8B/wGfApUB/wHfAtQB/wHzAu8B/wH7AvYB/wFlAjUB9AM0
        AVSYAAFsAjkB8wH/AdcBsgL/AcsBlAL/AdIBpAL/AdUBqQL/AdYBqwL/AdMBqAL/Ac8BnwL/AdMBnQH/
        AfcBxwGYAf8BggKBAf8BVAJTAa8QAAFtAjgB9wHvAtwB/wHAArIB/wFVAlQBtQFAAj8BbwGiApkB/wH0
        AusB/wH4AvEB/wFnAjkB8gMqAUGYAAFaAlYBxQHtAdABvgL/AdEBogL/AeABuwL/AeIBwwL/AeEBwgL/
        AeABvwL/AeABugL/AdgBpAH/AdcBrAGJAf8BXwE1ATcB+wE1AjQBVRAAAWUCPwHsAcgCugH/AVUCUwGw
        AxYBHgFVAlQBsgHAArQB/wHoAtwB/wHwAucB/wFmAkEB6wMcASeYAAMtAUUBdAI6AfcB+QHPAbcC/wHW
        AbUC/wHpAdIC/wHwAdsC/wHrAdMB/wH+AdsBuAH/AesBugGXAf8BjwGCAYEB/wFWAlQBsxQAA0IBdAFR
        Ak8BnAMfAS0BVQJUAbIBwAKwAf8B3gLMAf8B6ALaAf8BzgLBAf8BUwJSAaqgAAM/AW0BZwI1AfYB4gHA
        AbIB/wHyAcUBsAH/AfQByAG0Af8B7QG+AakB/wHVAawBmQH/AZIBhwGEAf8BWgJWAcUDDwEUHAABUQJP
        AZwBxQK3Af8B7wLdAf8B3gLLAf8BxAK3Af8BYAJUAdQDFQEdpAABLAIrAUMBWwJXAcQBZwI5AfIBiwFZ
        AVcB+wF5AT4BPQH4AWACTgHeA0gBhAMGAQggAANCAXYBZAJGAecBbQI4AfcBZQI/AewDTgGYAxQBHKAA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAH/AfAB/wHhBAAB/wHgAf8BwAQA
        Af8BwAH/AYAEAAH5AYAB/wUAAeABAQH+BQABgAEDAfwBAQUAAQcB4AEDBQABDwGAAQcFAAEPAQABDwUA
        AQcBAAEfBQABBwEAAT8FAAEPAQABPwUAAQ8BAAE/BQABHwEAAX8EAAGAAR8BwAF/BAABwAE/AcAB/wQA
        Cw==
</value>
  </data>
</root>